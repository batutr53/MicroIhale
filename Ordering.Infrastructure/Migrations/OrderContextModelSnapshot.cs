// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ordering.Infrastructure.Data;

#nullable disable

namespace Ordering.Infrastructure.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ordering.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuctionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuctionId = "7fc039ee-fd6c-4579-9627-744a5cbfe605",
                            CreatedAt = new DateTime(2022, 8, 17, 13, 19, 31, 217, DateTimeKind.Utc).AddTicks(3926),
                            ProductId = "f584dce0-e0db-43dc-bdd8-8bab52a41380",
                            SellerUserName = "test@test.com",
                            TotalPrice = 1000m,
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 2,
                            AuctionId = "e6df0e19-dec7-4db7-975a-fbfca3e96ba0",
                            CreatedAt = new DateTime(2022, 8, 17, 13, 19, 31, 217, DateTimeKind.Utc).AddTicks(3932),
                            ProductId = "d7bfbfd5-1917-42ff-9456-928dccb22f61",
                            SellerUserName = "test1@test.com",
                            TotalPrice = 1000m,
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 3,
                            AuctionId = "fd7cccfc-ed02-45a2-9cce-b432fbfe7843",
                            CreatedAt = new DateTime(2022, 8, 17, 13, 19, 31, 217, DateTimeKind.Utc).AddTicks(3946),
                            ProductId = "4a2e584d-cc51-4326-b2a3-41ba81d63a47",
                            SellerUserName = "test2@test.com",
                            TotalPrice = 1000m,
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = 4,
                            AuctionId = "c7148087-3c1c-492e-a712-a5a4afaee9dd",
                            CreatedAt = new DateTime(2022, 8, 17, 13, 19, 31, 217, DateTimeKind.Utc).AddTicks(3950),
                            ProductId = "ccf4bcf2-27a2-4397-8eaa-4521b4a9a69d",
                            SellerUserName = "test3@test.com",
                            TotalPrice = 1000m,
                            UnitPrice = 10m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
